//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: lib/protocol/resource.proto
// Note: requires additional types generated from: lib/protocol/content_handle.proto
// Note: requires additional types generated from: lib/protocol/attribute.proto
namespace bnet.protocol
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"Payload")]
  public partial class Payload : global::ProtoBuf.IExtensible
  {
    public Payload() {}
    
    private string _content_handle;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"content_handle", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string content_handle
    {
      get { return _content_handle; }
      set { _content_handle = value; }
    }
    private uint _data_size;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"data_size", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint data_size
    {
      get { return _data_size; }
      set { _data_size = value; }
    }
    private readonly global::System.Collections.Generic.List<bnet.protocol.attribute.Attribute> _custom = new global::System.Collections.Generic.List<bnet.protocol.attribute.Attribute>();
    [global::ProtoBuf.ProtoMember(3, Name=@"custom", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<bnet.protocol.attribute.Attribute> custom
    {
      get { return _custom; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"Dependency")]
  public partial class Dependency : global::ProtoBuf.IExtensible
  {
    public Dependency() {}
    
    private string _resource_handle;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"resource_handle", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string resource_handle
    {
      get { return _resource_handle; }
      set { _resource_handle = value; }
    }
    private readonly global::System.Collections.Generic.List<bnet.protocol.attribute.Attribute> _custom = new global::System.Collections.Generic.List<bnet.protocol.attribute.Attribute>();
    [global::ProtoBuf.ProtoMember(2, Name=@"custom", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<bnet.protocol.attribute.Attribute> custom
    {
      get { return _custom; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"Metadata")]
  public partial class Metadata : global::ProtoBuf.IExtensible
  {
    public Metadata() {}
    
    private readonly global::System.Collections.Generic.List<bnet.protocol.Dependency> _dependency = new global::System.Collections.Generic.List<bnet.protocol.Dependency>();
    [global::ProtoBuf.ProtoMember(1, Name=@"dependency", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<bnet.protocol.Dependency> dependency
    {
      get { return _dependency; }
    }
  
    private readonly global::System.Collections.Generic.List<bnet.protocol.Payload> _payload = new global::System.Collections.Generic.List<bnet.protocol.Payload>();
    [global::ProtoBuf.ProtoMember(2, Name=@"payload", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<bnet.protocol.Payload> payload
    {
      get { return _payload; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"IndexEntry")]
  public partial class IndexEntry : global::ProtoBuf.IExtensible
  {
    public IndexEntry() {}
    
    private string _name;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"name", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string name
    {
      get { return _name; }
      set { _name = value; }
    }
    private string _url;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"url", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string url
    {
      get { return _url; }
      set { _url = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"ResourceIndex")]
  public partial class ResourceIndex : global::ProtoBuf.IExtensible
  {
    public ResourceIndex() {}
    
    private readonly global::System.Collections.Generic.List<bnet.protocol.IndexEntry> _entry = new global::System.Collections.Generic.List<bnet.protocol.IndexEntry>();
    [global::ProtoBuf.ProtoMember(1, Name=@"entry", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<bnet.protocol.IndexEntry> entry
    {
      get { return _entry; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}