//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: lib/profanity/profanity.proto
namespace bnet.protocol.profanity
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"WordFilter")]
  public partial class WordFilter : global::ProtoBuf.IExtensible
  {
    public WordFilter() {}
    
    private string _type;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"type", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string type
    {
      get { return _type; }
      set { _type = value; }
    }
    private string _regex;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"regex", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string regex
    {
      get { return _regex; }
      set { _regex = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"WordFilters")]
  public partial class WordFilters : global::ProtoBuf.IExtensible
  {
    public WordFilters() {}
    
    private readonly global::System.Collections.Generic.List<bnet.protocol.profanity.WordFilter> _filters = new global::System.Collections.Generic.List<bnet.protocol.profanity.WordFilter>();
    [global::ProtoBuf.ProtoMember(1, Name=@"filters", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<bnet.protocol.profanity.WordFilter> filters
    {
      get { return _filters; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}