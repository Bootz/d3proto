// Generated by ProtoGen, Version=2.3.0.277, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.chat {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public static partial class Chat {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Chat() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CiJzZXJ2aWNlL2NoYXQvZGVmaW5pdGlvbi9jaGF0LnByb3RvEhJibmV0LnBy" + 
          "b3RvY29sLmNoYXQaHGxpYi9wcm90b2NvbC9hdHRyaWJ1dGUucHJvdG8aGWxp" + 
          "Yi9wcm90b2NvbC9lbnRpdHkucHJvdG8aHWxpYi9wcm90b2NvbC9pbnZpdGF0" + 
          "aW9uLnByb3RvGhFsaWIvcnBjL3JwYy5wcm90bxojc2VydmljZS9jaGFubmVs" + 
          "L2NoYW5uZWxfdHlwZXMucHJvdG8aKHNlcnZpY2UvY2hhdC9kZWZpbml0aW9u" + 
          "L2NoYXRfdHlwZXMucHJvdG8y1wIKC0NoYXRTZXJ2aWNlEmoKC0ZpbmRDaGFu" + 
          "bmVsEikuYm5ldC5wcm90b2NvbC5jaGFubmVsLkZpbmRDaGFubmVsUmVxdWVz" + 
          "dBoqLmJuZXQucHJvdG9jb2wuY2hhbm5lbC5GaW5kQ2hhbm5lbFJlc3BvbnNl" + 
          "IgSAtRgBEnAKDUNyZWF0ZUNoYW5uZWwSKy5ibmV0LnByb3RvY29sLmNoYW5u" + 
          "ZWwuQ3JlYXRlQ2hhbm5lbFJlcXVlc3QaLC5ibmV0LnByb3RvY29sLmNoYW5u" + 
          "ZWwuQ3JlYXRlQ2hhbm5lbFJlc3BvbnNlIgSAtRgCEmoKC0pvaW5DaGFubmVs" + 
          "EikuYm5ldC5wcm90b2NvbC5jaGFubmVsLkpvaW5DaGFubmVsUmVxdWVzdBoq" + 
          "LmJuZXQucHJvdG9jb2wuY2hhbm5lbC5Kb2luQ2hhbm5lbFJlc3BvbnNlIgSA" + 
          "tRgDQgOAAQA=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bnet.protocol.attribute.Proto.Attribute.RegisterAllExtensions(registry);
        global::bnet.protocol.Entity.RegisterAllExtensions(registry);
        global::bnet.protocol.invitation.Proto.Invitation.RegisterAllExtensions(registry);
        global::bnet.protocol.Rpc.RegisterAllExtensions(registry);
        global::bnet.protocol.channel.ChannelTypes.RegisterAllExtensions(registry);
        global::bnet.protocol.chat.ChatTypes.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bnet.protocol.attribute.Proto.Attribute.Descriptor, 
          global::bnet.protocol.Entity.Descriptor, 
          global::bnet.protocol.invitation.Proto.Invitation.Descriptor, 
          global::bnet.protocol.Rpc.Descriptor, 
          global::bnet.protocol.channel.ChannelTypes.Descriptor, 
          global::bnet.protocol.chat.ChatTypes.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Services
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public partial interface IChatService {
    global::bnet.protocol.channel.FindChannelResponse FindChannel(global::bnet.protocol.channel.FindChannelRequest findChannelRequest);
    global::bnet.protocol.channel.CreateChannelResponse CreateChannel(global::bnet.protocol.channel.CreateChannelRequest createChannelRequest);
    global::bnet.protocol.channel.JoinChannelResponse JoinChannel(global::bnet.protocol.channel.JoinChannelRequest joinChannelRequest);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public partial class ChatService : IChatService, pb::IRpcDispatch, global::System.IDisposable {
    private readonly bool dispose;
    private readonly pb::IRpcDispatch dispatch;
    public ChatService(pb::IRpcDispatch dispatch) : this(dispatch, true) {
    }
    public ChatService(pb::IRpcDispatch dispatch, bool dispose) {
      if (null == (this.dispatch = dispatch)) throw new global::System.ArgumentNullException();
      this.dispose = dispose && dispatch is global::System.IDisposable;
    }
    
    public void Dispose() {
      if (dispose) ((global::System.IDisposable)dispatch).Dispose();
    }
    
    TMessage pb::IRpcDispatch.CallMethod<TMessage, TBuilder>(string method, pb::IMessageLite request, pb::IBuilderLite<TMessage, TBuilder> response) {
      return dispatch.CallMethod(method, request, response);
    }
    
    public global::bnet.protocol.channel.FindChannelResponse FindChannel(global::bnet.protocol.channel.FindChannelRequest findChannelRequest) {
       return dispatch.CallMethod("FindChannel", findChannelRequest, global::bnet.protocol.channel.FindChannelResponse.CreateBuilder());
    }
    
    public global::bnet.protocol.channel.CreateChannelResponse CreateChannel(global::bnet.protocol.channel.CreateChannelRequest createChannelRequest) {
       return dispatch.CallMethod("CreateChannel", createChannelRequest, global::bnet.protocol.channel.CreateChannelResponse.CreateBuilder());
    }
    
    public global::bnet.protocol.channel.JoinChannelResponse JoinChannel(global::bnet.protocol.channel.JoinChannelRequest joinChannelRequest) {
       return dispatch.CallMethod("JoinChannel", joinChannelRequest, global::bnet.protocol.channel.JoinChannelResponse.CreateBuilder());
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public partial class Dispatch : pb::IRpcDispatch, global::System.IDisposable {
      private readonly bool dispose;
      private readonly IChatService implementation;
      public Dispatch(IChatService implementation) : this(implementation, true) {
      }
      public Dispatch(IChatService implementation, bool dispose) {
        if (null == (this.implementation = implementation)) throw new global::System.ArgumentNullException();
        this.dispose = dispose && implementation is global::System.IDisposable;
      }
      
      public void Dispose() {
        if (dispose) ((global::System.IDisposable)implementation).Dispose();
      }
      
      public TMessage CallMethod<TMessage, TBuilder>(string methodName, pb::IMessageLite request, pb::IBuilderLite<TMessage, TBuilder> response)
        where TMessage : pb::IMessageLite<TMessage, TBuilder>
        where TBuilder : pb::IBuilderLite<TMessage, TBuilder> {
        switch(methodName) {
          case "FindChannel": return response.MergeFrom(implementation.FindChannel((global::bnet.protocol.channel.FindChannelRequest)request)).Build();
          case "CreateChannel": return response.MergeFrom(implementation.CreateChannel((global::bnet.protocol.channel.CreateChannelRequest)request)).Build();
          case "JoinChannel": return response.MergeFrom(implementation.JoinChannel((global::bnet.protocol.channel.JoinChannelRequest)request)).Build();
          default: throw new global::System.MissingMethodException(typeof(IChatService).FullName, methodName);
        }
      }
    }
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public partial class ServerStub : pb::IRpcServerStub, global::System.IDisposable {
      private readonly bool dispose;
      private readonly pb::IRpcDispatch implementation;
      public ServerStub(IChatService implementation) : this(implementation, true) {
      }
      public ServerStub(IChatService implementation, bool dispose) : this(new Dispatch(implementation, dispose), dispose) {
      }
      public ServerStub(pb::IRpcDispatch implementation) : this(implementation, true) {
      }
      public ServerStub(pb::IRpcDispatch implementation, bool dispose) {
        if (null == (this.implementation = implementation)) throw new global::System.ArgumentNullException();
        this.dispose = dispose && implementation is global::System.IDisposable;
      }
      
      public void Dispose() {
        if (dispose) ((global::System.IDisposable)implementation).Dispose();
      }
      
      public pb::IMessageLite CallMethod(string methodName, pb::ICodedInputStream input, pb::ExtensionRegistry registry) {
        switch(methodName) {
          case "FindChannel": return implementation.CallMethod(methodName, global::bnet.protocol.channel.FindChannelRequest.ParseFrom(input, registry), global::bnet.protocol.channel.FindChannelResponse.CreateBuilder());
          case "CreateChannel": return implementation.CallMethod(methodName, global::bnet.protocol.channel.CreateChannelRequest.ParseFrom(input, registry), global::bnet.protocol.channel.CreateChannelResponse.CreateBuilder());
          case "JoinChannel": return implementation.CallMethod(methodName, global::bnet.protocol.channel.JoinChannelRequest.ParseFrom(input, registry), global::bnet.protocol.channel.JoinChannelResponse.CreateBuilder());
          default: throw new global::System.MissingMethodException(typeof(IChatService).FullName, methodName);
        }
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
